# 1 通过切片赋值：当给切片赋值为与切片个数相同的元素数量的列表时，
# 实际上就是将切片指定的元素替换为新列表的内容
c = [1,2,3,"hello","world","name"]
c[2:5] = ['A','B','C']
print(c) #[1, 2, 'A', 'B', 'C', 'name']

#2 通过切片插入给定列表中的值到原列表中指定位置，
# 具体位置通过切片起始索引指定，此时两个索引值应该相等
c = [1,2,3,"hello","world","name"]
c[2:2] = ["haha","abc"]
print(c)# [1, 2, 'haha', 'abc', 3, 'hello', 'world', 'name']

# 3通过切片更新和同时插入元素：上面两点讲了切片元素替换和插入，
# 如果赋值语句右边的列表长度长于切片的起始位置包含的元素个数，是否会导致切片段的元素被替换，多余的被插入？
# 切片部分被替换，多出切片部分的新元素插入
lis = ['a','b','c','d','e','f']
lis[2:5]=['1','2','3','4']
print(lis) #['a', 'b', '1', '2', '3', '4', 'f']

c=[1,2,3,'a1178','b210','c3112']
c[2:4]=[100,200,300,400]
print(c) #[1, 2, 100, 200, 300, 400, 'b210', 'c3112']

# 如果列表元素个数少于切片包含的元素个数，切片超过赋值列表的部分被删除了
lis1 = ['0','1','2','3','4','5','6','7','8','9']
lis1[0:5]=['a','b']#赋值 0  1 后面的2,3,4删除
print(lis1)
# 列表清空
c[:]=[]
print(c)