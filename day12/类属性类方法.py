"""
类的组成：
    属性：
        成员变量(实例属性，对象属性)

        类属性


        类属性与对象属性的区别：
        1.定义位置不同
            对象属性：
                __init__方法中
            类属性：
                类内，方法外

        2.所有者不同：
            对象属性：
                属于对象
            类属性：
                属于类
                所有对象都可以访问类属性(获取值)
        3.内存存储的份数不同：
            对象属性：
                取决于对象的个数
            类属性：
                独一份

        4.访问方式不同：
            对象属性：
                对象名.属性名
            类属性：
                类名.属性名
                对象名.属性名(仅限于获取值)

        5.生命周期不同
            对象属性:
                出生：对象创建时间
                死亡：对象无人使用时，会被系统自动回收

            类属性:
                出生：
                    文件被加载的时候出生
                死亡：
                    程序结束

    方法：
        成员方法(实例方法，对象方法)

        类方法
        静态方法
"""


class Student():
    cls_room_id = 102

    def __init__(self, name, age):
        self.name = name
        self.age = age


s = Student("张三", 12)
print(s.__dict__)
# 等价于为对象s添加了一个对象属性，cls_room_id
s.cls_room_id = 103
print(s.cls_room_id)
print(s.__dict__)
# 类属性的访问方式，通过类名.类属性名
print(Student.cls_room_id)
